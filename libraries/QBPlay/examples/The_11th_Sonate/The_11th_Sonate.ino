/*
 * The_11th_Sonate.ino
 * Файл с примером использования библиотеки QBPlay
 * https://en.wikibooks.org/wiki/QBasic/Appendix#PLAY
 *
 * created 10.11.2017
 * modified 12.11.2017
 * with Arduino 1.8.3 (tested on Arduino Uno)
 *
 * Copyright 2017 Vitaliy Fust <aslok.zp@gmail.com>
 *
 * This work is licensed under the MIT License (MIT). To view a copy of this
 * license, visit http://opensource.org/licenses/MIT or send a letter to:
 * Open Source Initiative
 * 855 El Camino Real
 * Ste 13A, #270
 * Palo Alto, CA 94301
 * United States.
 *
 *
 */

#include "QBPlay.h"
QBPlay* play;
const byte speaker_pin = A3;

const char The_11th_Sonate[] PROGMEM = "MNT150L32O1A+>DL16<AA+FL64>DL8FP8L64<A+L8>DP8P4L32<A+>DL16<AA+FL64>DL8FP8L64<A+L8>DP8P4L32<A+>DL16<AA+FL32>DFL16C+D<A+L64>FL32A+L16EFDL32A+>DL16<AA+FL32>DFL16C+D<A+L2>A+.L16AA+>C<A+L8AGFD+DCGFL4D+DP4L16<AA+>C<A+L8G+GFD+DCD+<AL16A+P16>DC<A+AA+GFP16>GFD+DD+C<A+P16O3DC<A+AA+GFP16>GFD+DD+CL8<A+L16>CDD+FGAL64A+>CL16<A+AA+>CL64DD+DL16CDD+L8FP8L4<FP4L16O0A+AA+F>DC+D<A+>FEFDA+AA+F>DC+D<A+L4>FP4L2>FL4<B>D+D<A+>C<ABL16>CL32<EGL16>CL32<EGL16>CL32<EGL16>DL32<EGL16>EL32<GA+L16>CL32<GA+L16>DL32<GA+L16>EL32<GA+L16>FL32<FAL16>FL32<FAL16>FL32<FAL16>EL32<FAL16>DL32<FG+L16>CL32<FG+L16BL32FG+L16>DL32<FG+L16>CL32<EGL16BL32EGL16>CL32<EGL16>DL32<EGL16>EL32<GA+L16>CL32<GA+L16>DL32<GA+L16>EL32<GA+L16>FL32<FAL16>FL32<FAL16>FL32<FAL16>EL32<FAL16>DL32<FG+L16>CL32<FG+L16BL32FG+L16>DL32<FG+L16>CL32<EGL16>CL32<EGL16BL32FG+L16>DL32<FG+L16>CL32<EGL16>CL32<EGL16BL32FG+L16>DL32<FG+L16>C<CDEFGAB>C<B>C<B>C<B>C<BL2>CL4<A>FL64<AL4>CL64FL4AL64<AL4>CL64AL4>CL64O2AL4>CP4<A>FL64<AL4>CL64FL4AL64<AL4>CL64AL4>CL64<AL2>C.L4<F+A>C<F+A+GC+CAL64<A+>DL4GL64<GA+L4>EL64<FAL4>FP4L64<FL2AL64DL4FL64<A+L4>DL64GL4A+.L64FL8AL64EL4GL64CL4EL64AL2>CL64<FL4AL64DL4FL64A+L4>D.L64<AL8>CL64<GL4A+L64EL4GL64A+L4>G.L64<AL8>FL64<GL4>E.L64<FL8>DL64<EL4>CL64<DL4A+L64<AL4>AL64C+L4GL64DL4FL64<FGL4>DO0CL64>FAL4>CO0CL64>EGL4>CO0FL64FA>CL4FL64FL8AL64>FL4AL64FL8AL64<DL8FL64>DL8FL64O0A+L8>DL64A+L8>DL64<GL8A+L64>GL4A+L64FL8AL64<EL8GL64>EL8GL64<CL8EL64>CL8EL64<AL8>CL64AL4>CL64<AL8>CL64O1FL8AL64>FL8AL64<DL8FL64>DL8FL64<A+L8>DL64A+L4>DL64<AL8>CL64O1GL8A+L64>GL8A+L64<EL8GL64>EL8GL64<A+L8>GL64A+L4>GL64<AL8>FL64O1GL8>EL64GL4>EL64<FL8>DL64O1EL8>CL64EL8>CL64O1DL8A+L64>DL8A+L16A<A>C+EA>C+EG+AG+AG+AEC+<AP8<A>DFA>DFG+AG+AG+AFD<AP8<G+B>DFG+B>DFDG+FD<BG+FP8EGA+>C+EGA+>D+E<E>E<E>E<E>E<F>F<E>E<F>FO2A+>A+<A>AE>E<F>FO2A+>A+<A>AE>E<F>FO2A+>A+<A>AE>E<F>FO2A+>A+<A>A<G>G<F>F<E>E<D>D<C>CO1A+>A+<A>A<G>G<F>F<E>E<D>D<C>CO0A+>A+<A>A<G>G<F>FE>C<F>C<A+>C<A>C<E>C<F>C<A+>C<A>C<E>C<F>C<A+>C<A>C<C+>C+<D>D<E>E<F>F<F+>F+<G>G<A>A<A+>A+C>C<D>D<C>CO1A+>A+<A>A<G>G<F>F<E>E<D>D<C>C<E>EO0F>F<F>F<F>F<F>FL64>AL4C.L8<FL64G+A+L4>C+.L8<G+L64GA+L8>C<FL64GA+L8>C<EL2FL64A>CL4A.L8FL64<A+>C+L4A+.L8G+L64<A+>C+L8F+FL64<A+>C+L8F+EL64<A>CL4FP4L64<A+>C+L8GFL64<A+>C+L8GEL64<A>CL4FP4L64<A+>C+L8F+FL64<A+>C+L8GEL32<FL4>F.L32<GL8>GL32<AL4>A.L32<A+L8>A+L32CL4>C.L32<DL8>DL32<EL8>EL32<FL8>FL32<GL8>GL32<AL8>AL32<A+L4>A+.L32<AL8>AL32<GL4>G.L32<FL8>FL32<EL4>E.L32<DL8>DL32<CL8>CL32O1A+L8>A+L32<AL8>AL32<GL8>GL32<FL8>FP8L16ED+ECFP16P16P16>ED+ECFP16P16P16P4L64EGA+>CL2EL64<FA>CL2FL32O1A+>DL16<AA+FL64>DL8FP8L64<A+L8>DP8P4L32<A+>DL16<AA+FL64>DL8FP8L64<A+L8>DP8P4L32<A+>DL16<AA+FL32>DFL16C+D<A+L64>FL32A+L16EFDL32A+>DL16<AA+FL32>DFL16C+D<A+L2>A+.L16AA+>C<A+L8AGFD+DCGFL4D+DP4L16<AA+>C<A+L8G+GFD+DCD+<AL16A+P16>DC<A+AA+GFP16>GFD+DD+C<A+P16O3DC<A+AA+GFP16>GFD+DD+CL8<A+L16>CDD+FGAL64A+>CL16<A+AA+>CL64DD+DL16CDD+L8FP8L4<FP4L16O0A+AA+F>DC+D<A+>FEFDA+AA+F>DC+D<A+L4>FP4L2>FL4<B>D+D<A+>C<ABL16>CL32<EGL16>CL32<EGL16>CL32<EGL16>DL32<EGL16>EL32<GA+L16>CL32<GA+L16>DL32<GA+L16>EL32<GA+L16>FL32<FAL16>FL32<FAL16>FL32<FAL16>EL32<FAL16>DL32<FG+L16>CL32<FG+L16BL32FG+L16>DL32<FG+L16>CL32<EGL16BL32EGL16>CL32<EGL16>DL32<EGL16>EL32<GA+L16>CL32<GA+L16>DL32<GA+L16>EL32<GA+L16>FL32<FAL16>FL32<FAL16>FL32<FAL16>EL32<FAL16>DL32<FG+L16>CL32<FG+L16BL32FG+L16>DL32<FG+L16>CL32<EGL16>CL32<EGL16BL32FG+L16>DL32<FG+L16>CL32<EGL16>CL32<EGL16BL32FG+L16>DL32<FG+L16>C<CDEFGAB>C<B>C<B>C<B>C<BL2>CL4<A>FL64<AL4>CL64FL4AL64<AL4>CL64AL4>CL64O2AL4>CP4<A>FL64<AL4>CL64FL4AL64<AL4>CL64AL4>CL64<AL2>C.L4<F+A>C<F+A+GC+CAL64<A+>DL4GL64<GA+L4>EL64<FAL4>FP4L64<FL2AL64DL4FL64<A+L4>DL64GL4A+.L64FL8AL64EL4GL64CL4EL64AL2>CL64<FL4AL64DL4FL64A+L4>D.L64<AL8>CL64<GL4A+L64EL4GL64A+L4>G.L64<AL8>FL64<GL4>E.L64<FL8>DL64<EL4>CL64<DL4A+L64<AL4>AL64C+L4GL64DL4FL64<FGL4>DO0CL64>FAL4>CO0CL64>EGL4>CO0FL64FA>CL4FL64FL8AL64>FL4AL64FL8AL64<DL8FL64>DL8FL64O0A+L8>DL64A+L8>DL64<GL8A+L64>GL4A+L64FL8AL64<EL8GL64>EL8GL64<CL8EL64>CL8EL64<AL8>CL64AL4>CL64<AL8>CL64O1FL8AL64>FL8AL64<DL8FL64>DL8FL64<A+L8>DL64A+L4>DL64<AL8>CL64O1GL8A+L64>GL8A+L64<EL8GL64>EL8GL64<A+L8>GL64A+L4>GL64<AL8>FL64O1GL8>EL64GL4>EL64<FL8>DL64O1EL8>CL64EL8>CL64O1DL8A+L64>DL8A+L16A<A>C+EA>C+EG+AG+AG+AEC+<AP8<A>DFA>DFG+AG+AG+AFD<AP8<G+B>DFG+B>DFDG+FD<BG+FP8EGA+>C+EGA+>D+E<E>E<E>E<E>E<F>F<E>E<F>FO2A+>A+<A>AE>E<F>FO2A+>A+<A>AE>E<F>FO2A+>A+<A>AE>E<F>FO2A+>A+<A>A<G>G<F>F<E>E<D>D<C>CO1A+>A+<A>A<G>G<F>F<E>E<D>D<C>CO0A+>A+<A>A<G>G<F>FE>C<F>C<A+>C<A>C<E>C<F>C<A+>C<A>C<E>C<F>C<A+>C<A>C<C+>C+<D>D<E>E<F>F<F+>F+<G>G<A>A<A+>A+C>C<D>D<C>CO1A+>A+<A>A<G>G<F>F<E>E<D>D<C>C<E>EO0F>F<F>F<F>F<F>FL64>AL4C.L8<FL64G+A+L4>C+.L8<G+L64GA+L8>C<FL64GA+L8>C<EL2FL64A>CL4A.L8FL64<A+>C+L4A+.L8G+L64<A+>C+L8F+FL64<A+>C+L8F+EL64<A>CL4FP4L64<A+>C+L8GFL64<A+>C+L8GEL64<A>CL4FP4L64<A+>C+L8F+FL64<A+>C+L8GEL32<FL4>F.L32<GL8>GL32<AL4>A.L32<A+L8>A+L32CL4>C.L32<DL8>DL32<EL8>EL32<FL8>FL32<GL8>GL32<AL8>AL32<A+L4>A+.L32<AL8>AL32<GL4>G.L32<FL8>FL32<EL4>E.L32<DL8>DL32<CL8>CL32O1A+L8>A+L32<AL8>AL32<GL8>GL32<FL8>FP8L16ED+ECFP16P16P16>ED+ECFP16P16P16P4L64EGA+>CL2EL64<FA>CL2F";

void setup(){
    play = new QBPlay(speaker_pin);
    play->start((__FlashStringHelper*) The_11th_Sonate);
}

void loop(){
    play->touch();
}
